name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm ci

      - name: Create .env file
        run: |
          echo 'PORT=3333' >> .env
          echo "CLIENT_URL=${{ secrets.CLIENT_URL }}" >> .env
          echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" >> .env
          echo "ACCESS_SECRET=${{ secrets.ACCESS_SECRET }}" >> .env
          echo "REFRESH_SECRET=${{ secrets.REFRESH_SECRET }}" >> .env
          echo "CLOUDINARY_CLOUD_NAME=${{ secrets.CLOUDINARY_CLOUD_NAME }}" >> .env
          echo "CLOUDINARY_API_KEY=${{ secrets.CLOUDINARY_API_KEY }}" >> .env
          echo "CLOUDINARY_API_SECRET=${{ secrets.CLOUDINARY_API_SECRET }}" >> .env
          echo "POSTGRES_USER=${{ secrets.POSTGRES_USER }}" >> .env
          echo "POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}" >> .env
          echo "POSTGRES_DB=${{ secrets.POSTGRES_DB }}" >> .env

      - name: Create .env.test file
        run: |
          echo "DATABASE_URL=${{ secrets.DATABASE_URL_TEST }}" >> .env.test
          echo "ACCESS_SECRET=${{ secrets.ACCESS_SECRET_TEST }}" >> .env.test
          echo "REFRESH_SECRET=${{ secrets.REFRESH_SECRET_TEST }}" >> .env.test
          echo "POSTGRES_USER=${{ secrets.POSTGRES_USER_TEST }}" >> .env.test
          echo "POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD_TEST }}" >> .env.test
          echo "POSTGRES_DB=${{ secrets.POSTGRES_DB_TEST }}" >> .env.test

      - name: Run tests
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL_TEST }}
        run: npm run docker:test:e2e

      - name: Build project
        run: npm run build

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-test

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: npm ci

      - name: Create .env file
        run: |
          echo 'PORT=3333' >> .env
          echo "CLIENT_URL=${{ secrets.CLIENT_URL }}" >> .env
          echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" >> .env
          echo "ACCESS_SECRET=${{ secrets.ACCESS_SECRET }}" >> .env
          echo "REFRESH_SECRET=${{ secrets.REFRESH_SECRET }}" >> .env
          echo "CLOUDINARY_CLOUD_NAME=${{ secrets.CLOUDINARY_CLOUD_NAME }}" >> .env
          echo "CLOUDINARY_API_KEY=${{ secrets.CLOUDINARY_API_KEY }}" >> .env
          echo "CLOUDINARY_API_SECRET=${{ secrets.CLOUDINARY_API_SECRET }}" >> .env
          echo "POSTGRES_USER=${{ secrets.POSTGRES_USER }}" >> .env
          echo "POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}" >> .env
          echo "POSTGRES_DB=${{ secrets.POSTGRES_DB }}" >> .env

      - name: Create .env.test file
        run: |
          echo "DATABASE_URL=${{ secrets.DATABASE_URL_TEST }}" >> .env.test
          echo "ACCESS_SECRET=${{ secrets.ACCESS_SECRET_TEST }}" >> .env.test
          echo "REFRESH_SECRET=${{ secrets.REFRESH_SECRET_TEST }}" >> .env.test
          echo "POSTGRES_USER=${{ secrets.POSTGRES_USER_TEST }}" >> .env.test
          echo "POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD_TEST }}" >> .env.test
          echo "POSTGRES_DB=${{ secrets.POSTGRES_DB_TEST }}" >> .env.test

      - name: Build project
        run: npm run build

      - name: Stop Docker Compose
        run: docker-compose down
